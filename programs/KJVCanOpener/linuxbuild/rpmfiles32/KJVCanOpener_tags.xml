<!-- XML file to define tags for kjvpurebiblesearch to build under makelsbpkg -->
<tags>
	<version>1.91.1</version>
	<release>1</release>
	<summary>GUI Application to Search and Count the Pure King James Bible</summary>
	<description>Study and analyze the Fingerprint of God in the mathematical structure, known as the King James Code, of the King James text of the Holy Bible. Allows instant real-time searches, with an autocompleter droplist to assist with words which come next.  Jump to specific words, verses, or chapters by number, and see all possible count statistics of phrases within the text.
For more info and downloads, see http://www.dewtronics.com/KingJamesPureBibleSearch/
For details on the King James Code, see http://visitbethelchurch.com/
</description>
	<vendor>Dewtronics</vendor>
	<license>GNU GPL 3</license>
	<packager>Donna Whisnant</packager>
	<group>Education</group>
	<arch>i686</arch>
	<lsbversion>4.0</lsbversion>

<pre>echo Running pre-install script...</pre>

<post><![CDATA[echo Running post-install script...

# no need to run it when updating, since %postun of the old package is run
# afterwards:
if [ "$1" = "1" ] ; then  # first install
  if [ -x /opt/gnome/bin/update-desktop-database ]; then
    /opt/gnome/bin/update-desktop-database -q
  elif (which update-desktop-database); then
    update-desktop-database -q /usr/share/applications
  fi

  if (which update-mime-database); then
    update-mime-database /usr/share/mime
  fi
fi

#run always:
for theme in gnome hicolor locolor; do
    if [ -e /usr/share/icons/$theme/icon-theme.cache ] ; then
        # touch it, just in case we cannot find the binary...
        touch /usr/share/icons/$theme
        if [ -x /opt/gnome/bin/gtk-update-icon-cache ]; then
            /opt/gnome/bin/gtk-update-icon-cache -q /usr/share/icons/$theme
        elif (which gtk-update-icon-cache); then
            gtk-update-icon-cache -q /usr/share/icons/$theme
        fi
        # ignore errors (e.g. when there is a cache, but no index.theme)
        true
    fi
done

# update /etc/mime.types
# backing out existing entries to avoid duplicates:
sed '
/^application\/vnd\.dewtronics\.kjvcanopener\.kjsfile/d
' /etc/mime.types 2>/dev/null >> /etc/mime.types.tmp$$

# now append our stuff to the temporary file:
cat >> /etc/mime.types.tmp$$ << END
application/vnd.dewtronics.kjvcanopener.kjsfile kjs
END

# and replace the original file:
mv -f /etc/mime.types.tmp$$ /etc/mime.types 2>/dev/null

if [ -x /opt/gnome/bin/update-desktop-database ]; then
    /opt/gnome/bin/update-desktop-database -q
elif (which update-desktop-database); then
  update-desktop-database -q /usr/share/applications
fi
]]></post>

<preun>echo Running pre-uninstall script...</preun>

<postun><![CDATA[echo Running post-uninstall script...

if [ "$1" = 0 ] ; then # only run when erasing the package - other cases handled by the triggers
  if [ -x /opt/gnome/bin/update-desktop-database ]; then
    /opt/gnome/bin/update-desktop-database -q
  elif (which update-desktop-database); then
    update-desktop-database -q
  fi
fi

# run always - both when upgrading as well as when erasing the package
if (which update-mime-database); then
    update-mime-database /usr/share/mime
fi

#run always
for theme in gnome hicolor locolor; do
  if [ -e /usr/share/icons/$theme/icon-theme.cache ] ; then
   # touch it, just in case we cannot find the binary...
    touch /usr/share/icons/$theme
    if [ -x /opt/gnome/bin/gtk-update-icon-cache ]; then
      /opt/gnome/bin/gtk-update-icon-cache -q /usr/share/icons/$theme
    elif (which gtk-update-icon-cache); then
      gtk-update-icon-cache -q /usr/share/icons/$theme
    fi
    # ignore errors (e.g. when there is a cache, but no index.theme)
    true
  fi
done

]]></postun>

</tags>

