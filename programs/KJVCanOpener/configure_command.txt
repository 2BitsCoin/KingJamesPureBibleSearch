Command-Lines for configuring Qt Build for KingJamesPureBibleSearch
===================================================================


Qt 4.8.4
========

Old Local Build:
./configure -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.4-dist


LSB x32 (old):
./configure -platform linux-lsb-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.4-lsb

*******************************************************************************

Linux LSB Build:
----------------

LSB x32:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON LINUX-32
../4.8.4-src-patched/configure -platform linux-lsb-g++-32 -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.4-32-lsb

LSB x64:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON LINUX-64
../4.8.4-src-patched/configure -platform linux-lsb-g++-64 -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.4-64-lsb

*******************************************************************************


----------------------------------------------------


Linux LOCAL BUILD (x64 release):
../4.8.4-src/configure -platform linux-g++-64 -developer-build -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-4.8.4-64-local


----------------------------------------------------


MAC Cocoa:
----------

../4.8.4-src/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -universal -arch x86 -arch ppc -arch x86_64 -arch ppc64 -prefix /Users/dewhisna/Qt/4.8.4-cocoa-run

*******************************************************************************

Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../4.8.4-src/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.4-cocoa-static-run

Cocoa x86/x64 Dynamic:   <<<< This was the development build for Mac
../4.8.4-src/configure -platform macx-g++ -opensource -release -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.4-cocoa-run

*******************************************************************************

These never worked for me because Apple has apparently dropped PPC support on
newer platforms and so I don't have a PPC compiler.  Here for reference in case
someone loans me an old Mac and there is sufficient requests for an old version:

Cocoa x86/x64/PPC (universal):
../4.8.4-src/configure -platform macx-llvm -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -universal -arch x86 -arch ppc -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.4-cocoa-static-univ-run


Carbon x86/PPC (universal):
../4.8.4-src/configure -platform macx-llvm -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -carbon -universal -arch x86 -arch ppc -prefix /Users/dewhisna/Qt/4.8.4-carbon-static-univ-run


Mac Cross-Compile on Linux Attempt:
-----------------------------------

export QMAKE_MAC_SDK=/usr/lib/apple/SDKs/MacOSX10.6.sdk/

../4.8.4-src/configure -xplatform macx-g++ -device-option CROSS_COMPILE=i686-apple-darwin10- -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch ppc -arch x86_64 -prefix /home/dewhisna/Qt/4.8.4-cocoa-static-univ-run


===============================================================================
===============================================================================


Qt 4.8.4 -- Win32 Cross-Compile
===============================

Built with:  sezero_4.5_20111101 build w/rev.5747 update from here:
http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/

configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32-
Needs -no-ssse3 to fix issue in src/gui/image/qjpeghandler.cpp:813: undefined reference to `__imp___Z32qt_convert_rgb888_to_rgb32_ssse3PjPKhi'

../4.8.4-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -debug-and-release -no-ssse3 -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /home/dewhisna/Qt/4.8.4-win32 -confirm-license 


===============================================================================
===============================================================================


Qt 4.8.5
========

Linux
-----
Linux LOCAL BUILD (x64 release):
../4.8.5-src/configure -platform linux-g++-64 -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-4.8.5-64-local


Linux LSB Build:
----------------

LSB x32:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON LINUX-32
../4.8.5-src-patched/configure -platform linux-lsb-g++-32 -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.5-32-lsb

LSB x64:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON LINUX-64
../4.8.5-src-patched/configure -platform linux-lsb-g++-64 -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.5-64-lsb


----------------------------------------------------

Mac Cocoa
---------
Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../4.8.5-src/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.5-cocoa-static-run -confirm-license


Mac Cocoa (Patched)
-------------------
Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../4.8.5-src-patched/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.5-patched-cocoa-static-run -confirm-license



Mac Cocoa (Patched) Universal x86, x86_64, PPC, PPC64
-----------------------------------------------------
../4.8.5-src-patched/configure -platform macx-g++ -opensource -release -static -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.5.sdk -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -universal -arch x86 -arch ppc -arch x86_64 -arch ppc64 -prefix /Users/dewhisna/Qt/4.8.5-patched-univ-static-run
(Good try, but doesn't work saying it doesn't understand the "triple" from the PPC target)


----------------------------------------------------

Windows (native)
----------------
- Built in-place rather than as shadow-build:
For MinGW, download the mingw-builds-install.exe and use: x32-4.8.1-posix-dwarf-rev5
Install MinGW to the Program Files (x86) folder, as default, and add C:\MinGW junction to locate it, so it can co-exist with other builds.
Configure Qt like so:
configure -platform win32-g++ -opensource -debug-and-release -qt-style-plastique -qt-style-windows -qt-style-windowsxp -qt-style-windowsvista -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -nomake tools -nomake examples -nomake demos -confirm-license 

----------------------------------------------------

Qt 4.8.5 -- Win32 Cross-Compile
-------------------------------

Built with:   i686-w64-mingw32-gcc-4.7.4-release-linux64_rubenvb.tar.xz from:
https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/rubenvb/gcc-4.7-release/

../4.8.5-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -debug-and-release -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /home/dewhisna/Qt/4.8.5-win32 -confirm-license 

Add this:
no-pkg-config


----------------------------------------------------

--------------------------
Qt 4.8.5 -- VNC (DYNAMIC):
--------------------------

../4.8.5-src/configure -platform linux-g++-64 -opensource -release -embedded -stl -qt-gfx-linuxfb -qt-gfx-qvfb -qt-gfx-vnc -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -openssl -no-nis -no-cups -depths 8,16,18,32 -qt-kbd-tty -qt-kbd-qvfb -qt-kbd-linuxinput -qt-mouse-linuxinput -qt-mouse-qvfb -qt-mouse-pc -fontconfig -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -confirm-license -prefix /home/dewhisna/Qt/4.8.5-vnc-run

Building with libvncserver:
http://libvncserver.sourceforge.net/
	./configure
	make
	sudo make install
http://github.com/connectedtable/qt-libvncserver
	qmake libvncserver.pro
	make
	make install
http://github.com/kanaka/noVNC

Could not get it to work with a static-built Qt Embedded, even with linking the qt-libvncserver
into KJPBS.  Maybe it would have worked if I had built Qt, then built qt-libvncserver, then
rebuilt Qt with the new static qt-libvncserver added.  But the easy fix, since vncserver itself
is a dynamic library that needs to be installed system-wide, is to just build Qt Embedded as
dynamic.  The app itself can be static, just not the main Qt and plugins.

Other notes: the CToolTipEdit needs to have a style more like that of the Emscripten build, as
it gave a warning about my window attributes not being supported on Qt 4.8.5.  The menus and
dialogs seemed to function correctly with normal exec() logic, unlike that of Emscripten.  And
of course it isn't sandboxed and can access the local filesystem.  Got it to run pretty well
using Remote Desktop Viewer, but never quite got it to run with noVNC, at least not yet.  It
would start to connect and then disconnect, regardless of what webserver was running noVNC.


===============================================================================
===============================================================================


Experimenting with Qt 5:
========================

Qt 5.0.1
========
These options no longer exist:
-qt-libtiff 
-qt-libmng
-no-phonon
-no-qt3support
-no-webkit
-no-xmlpatterns
-no-svg

LOCAL BUILD (x64 release):  <<<<<  Local build -- note: Can't build static and have tools.  Can't build with -no-opengl
../5.0.1-src/configure -platform linux-g++-64 -developer-build -opensource -release -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -no-c++11 -gui -widgets -fontconfig -no-dbus -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.0.1-64-local


Possibly needed for LSB:
-no-directfb
-no-linuxfb
-no-kms



Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../5.0.1-src/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/5.0.1-cocoa-static-run
*** Won't Build QtCore on Mac with: -no-opengl
Must delete: qttools folder (it doesn't listen to the -nomake tools!), qtwebkit, qtxmlpatterns


./configure -platform macx-clang-32 -opensource -debug-and-release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.1-cocoa-static-run

./configure -platform macx-g++-32 -opensource -debug-and-release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.1-cocoa-static-run
????? It won't build 32-bit on Mac! ?????

./configure -platform macx-clang -opensource -debug-and-release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.1-cocoa-static-run
????? Won't build on clang due to QCocoaWindow namespace in qcocoawindow.h ?????


This one builds for Qt5, but target KJPBS app won't compile due to duplicate symbols in qcocoawindow platform:
--------------------------------------------------------------------------------------------------------------
./configure -platform macx-g++ -opensource -debug-and-release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.1-cocoa-static-run


./configure -platform macx-g++ -opensource -debug-and-release -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.1-cocoa-run

===============================================================================
===============================================================================

Qt 5.0.2
========

Linux
-----

Linux Local Build (x32 static)
../5.0.2-src/configure -platform linux-g++-32 -developer-build -opensource -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -gui -widgets -fontconfig -no-dbus -no-opengl -nomake tools -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.0.2-32-local-static -confirm-license 


Linux Local Build (x32 dynamic)
../5.0.2-src/configure -platform linux-g++-32 -developer-build -opensource -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -gui -widgets -fontconfig -no-dbus -no-opengl -nomake tools -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.0.2-32-local -confirm-license 


Linux Local Build (x64 static):  <<<<<<<<<<<< EXPERIMENTAL BUILD!!!  (note: tools will not build as static)
../5.0.2-src/configure -platform linux-g++-64 -developer-build -opensource -release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -gui -widgets -fontconfig -no-dbus -no-opengl -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.0.2-64-local -confirm-license 


Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.0.2 (note: doesn't build docs)
../5.0.2-src/configure -platform linux-g++-64 -developer-build -opensource -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -gui -widgets -fontconfig -no-dbus -no-opengl -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.0.2-64-local -confirm-license 


To build/install docs:
----------------------
make docs
make install_docs



MAC Cocoa:
----------

// Doesn't want to work with -no-opengl that still works in Linux!

Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../5.0.2-src/configure -platform macx-g++-32 -opensource -release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.2-cocoa-static-run -confirm-license 

Cocoa x86/x64 Dynamic:   <<<< This was the development build for Mac
../5.0.2-src/configure -platform macx-g++-32 -opensource -debug-and-release -developer-build -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.2-cocoa-run -confirm-license 

===============================================================================
===============================================================================

Qt 5.1.0 Beta 1 - (Desktop)
===========================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.1.0 (note: doesn't build docs)
(Note: would NOT build with the "-no-opengl" option!)
../5.1.0-beta1-src/configure -platform linux-g++-64 -developer-build -opensource -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.1.0-beta1-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs



Qt 5.1.0 Release - (Desktop)
===========================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.1.0 (note: doesn't build docs)
(Note: would NOT build with the "-no-opengl" option!)
../5.1.0-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.1.0-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs


===============================================================================
===============================================================================


Qt 5.2.0 Beta 1 - (Desktop)
===========================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.2.0-beta1 (note: doesn't build docs)
(Note: would NOT build with the "-no-opengl" option!)
../5.2.0-beta1-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.2.0-beta1-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs


===============================================================================
===============================================================================

Qt 5.2.0 RC1-159 - (Desktop)
===========================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):
(Note: would NOT build with the "-no-opengl" option!)
../5.2.0-rc1-159-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.2.0-rc1-159-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs


===============================================================================
===============================================================================

Qt 5.2.0 RC1 - (Desktop)
========================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.2.0-rc1 (note: doesn't build docs)
../5.2.0-rc1-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.2.0-rc1-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs


MAC Cocoa:
----------

Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../5.2.0-rc1-src/configure -platform macx-g++ -opensource -debug-and-release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -nomake tools -nomake examples -nomake tests -skip webkit -skip webkit-examples -prefix /Users/dewhisna/Qt/5.2.0-rc1-cocoa-static-run -confirm-license



Qt 5.2.0 - (Desktop)
====================

MAC Cocoa:
----------

Cocoa x86 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../5.2.0-src/configure -platform macx-g++-32 -opensource -debug-and-release -static -accessibility -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -nomake tools -nomake examples -nomake tests -skip webkit -skip webkit-examples -prefix /Users/dewhisna/Qt/5.2.0-cocoa-static-run -confirm-license


Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.2.0 (note: doesn't build docs)
../5.2.0-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.2.0-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs



Qt 5.2.1 - (Desktop)
====================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.2.1 (note: doesn't build docs)
../5.2.1-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.2.1-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs


MAC Cocoa:
----------

Cocoa x86 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../5.2.1-src/configure -platform macx-g++-32 -opensource -debug-and-release -static -accessibility -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -nomake tools -nomake examples -nomake tests -skip webkit -skip webkit-examples -prefix /Users/dewhisna/Qt/5.2.1-cocoa-static-run -confirm-license



===============================================================================
===============================================================================

This section is JUNK trying to figure out how to compile Qt for Android:
------------------------------------------------------------------------

Android 4.0.4 (replicant-sdk_linux-x86):
export ANDROID_API_VERSION=android-4.0.4
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export ANDROID_NDK_ROOT=~/android/android-ndk-r8d
export ANDROID_NDK_ROOT=~/android/android-ndk-r8b
export ANDROID_SDK_ROOT=~/android/replicant-sdk_linux-x86
Warning: Disabling pkg-config since PKG_CONFIG_LIBDIR is not set.
Warning: Disabling pkg-config since PKG_CONFIG_SYSROOT_DIR is not set.

../5.0.1-src-android/stable/configure -xplatform android-g++ -opensource -gui -widgets -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk ~/android/android-ndk-r8b -android-sdk ~/android/replicant-sdk_linux-x86 -android-toolchain-version 4.4.3



Warning: Disabling pkg-config since PKG_CONFIG_LIBDIR is not set.
Warning: Disabling pkg-config since PKG_CONFIG_SYSROOT_DIR is not set.

export ANDROID_API_VERSION=android-8
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export ANDROID_NDK_ROOT=~/android/android-ndk-r8b
export ANDROID_SDK_ROOT=~/android/android-sdks

export PKG_CONFIG_LIBDIR=~/android/android-ndk-r8b/prebuilt/linux-x86/lib/pkgconfig
export PKG_CONFIG_SYSROOT_DIR=~/android/android-ndk-r8b/prebuilt/linux-x86


../5.0.1-src-android/stable/configure -xplatform android-g++ -opensource -gui -widgets -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk ~/android/android-ndk-r8b -android-sdk ~/android/android-sdks -android-toolchain-version 4.4.3


export ANDROID_API_VERSION=android-4.0.4
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r8b
export ANDROID_SDK_ROOT=/home/dewhisna/android/replicant-sdk_linux-x86

./configure -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8b -android-sdk /home/dewhisna/android/replicant-sdk_linux-x86 -android-toolchain-version 4.6 -nomake tests -nomake examples 


export ANDROID_API_VERSION=android-17
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r8b
export ANDROID_SDK_ROOT=/home/dewhisna/android/android-sdks

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8b -android-sdk /home/dewhisna/android/android-sdks -android-toolchain-version 4.6 -nomake tests -nomake examples

*******************************************************************************

===============================================================================
===============================================================================


Qt5.1 Android Build:
====================

************ THIS ONE WORKS, BUT ONLY SQL AS PLUGIN (LAST ONE): ***************

NOTE: Android only supports JDK 6.  It would build with JDK 7, but I don't know
if Qt uses the JDK 6 compat flag.  If not, that could explain some of the bizarre
random crashes and behaviour on the Android device

export ANDROID_API_VERSION=android-4.0.4
export JAVA_HOME=/usr/lib/jvm/java-6-openjdk-amd64
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r8e
export ANDROID_SDK_ROOT=/home/dewhisna/android/replicant-sdk_linux-x86

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/replicant-sdk_linux-x86 -nomake tests -nomake examples 

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -system-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/replicant-sdk_linux-x86 -nomake tests -nomake examples 

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -plugin-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/replicant-sdk_linux-x86 -nomake tests -nomake examples


************ THIS ONE WORKS, BUT ONLY SQL AS PLUGIN (LAST ONE): ***************

NOTE: Android only supports JDK 6.  It would build with JDK 7, but I don't know
if Qt uses the JDK 6 compat flag.  If not, that could explain some of the bizarre
random crashes and behaviour on the Android device

export ANDROID_API_VERSION=android-17
export JAVA_HOME=/usr/lib/jvm/java-6-openjdk-amd64
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r8e
export ANDROID_SDK_ROOT=/home/dewhisna/android/android-sdks

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/android-sdks -nomake tests -nomake examples 

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -system-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/android-sdks -nomake tests -nomake examples 

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -plugin-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/android-sdks -nomake tests -nomake examples

===============================================================================
===============================================================================

Building wwWidgets:
===================

Qt 4.8.4 Linux (Local):
-----------------
/wwWidgets/widgets/widgets.pro :
Change:
	linux-g++:CONFIG(release, debug|release):QMAKE_STRIP = strip
To:
	linux-g++|linux-g++-64:CONFIG(release, debug|release):QMAKE_STRIP = strip

Change:
	linux-g++ {
	  CONFIG += debug_and_release separate_debug_info
	} else {
	  CONFIG += debug_and_release
	}

To:
	linux-g++|linux-g++-64 {
	  CONFIG += release static
	} else {
	  CONFIG += debug_and_release
	}

The problem was our mkspec isn't "linux-g++", it's "linux-g++-64", which confused this thing.  And, we built originally with "release static", not "debug_and_release" in "shared" mode.  The above is needed to get a ".a" static link library instead of the dynamic ".so" libraries.

Without this, our app will crash with a "QWidget: Must construct a QApplication before a QPaintDevice" error because of mixed build types.

After this, do normal:  qmake, make, make install to install these in the Qt install folder from which the qmake was built.


Qt 4.8.4 Linux (LSB, etc) and Qt 4.8.4 Mac
------------------------------------------
/wwWidgets/wwwidgets4.pro :
Change:
	SUBDIRS += widgets plugin
To:
	SUBDIRS += widgets
(avoids building Qt Developer plugins when you don't have tools)


Qt 4.8.4 win32 on Linux:
------------------------
/wwWidgets/widgets/widgets.pro :
In win32 { } section, add:
	QMAKE_LFLAGS += -shared
(without this, you get a WinMain not defined error on linking)

And in win32 { } section, change
	CONFIG += build_all
to:
	CONFIG += build_all dll
(or else it will make the output dll called libwwwidgets4.a instead of wwwidgets4.dll)


/wwWidgets/wwwidgets4.pro :
Change:
	SUBDIRS += widgets plugin
To:
	SUBDIRS += widgets
(avoids building Qt Developer plugins when you don't have tools)


Qt 4.8.4 Mac
------------
Strangely, I was completely unable to get it to build as a universal binary on its own.
It would only build with the native type of the specified compiler.  I was, however,
successful with manually building a 32-bit and 64-bit library and used lipo to stitch
them together:
For the Static build, use:
	CONFIG += static
For the dynamic "local" use build, use:
	CONFIG += debug_and_release

On the static libraries, stitch them together with:

lipo -create <path-to-32-bit-libwwwidgets4.a> <path-to-64-bit-libwwwidgets4.a> -output libwwwidgets4.a
After building, use "make install" and replace the <qt-path>/lib/libwwwidgets4.a with the new one


-------------------------------
wwWidgets with Qt 4.8.5 LSB 64:
-------------------------------
From wwWidgets checkout on our SourceForge version, do from ~/Qt:

Release:
--------
mkdir -p build-wwwidgets4-Qt_4_8_5_64_lsb/Release
cd build-wwwidgets4-Qt_4_8_5_64_lsb/Release
/usr/local/Trolltech/Qt-4.8.5-64-lsb/bin/qmake ../../wwWidgets/wwwidgets4.pro -r -spec linux-lsb-g++-64
make -w
sudo make install

Debug:
------
mkdir -p build-wwwidgets4-Qt_4_8_5_64_lsb/Debug
cd build-wwwidgets4-Qt_4_8_5_64_lsb/Debug
/usr/local/Trolltech/Qt-4.8.5-64-lsb/bin/qmake ../../wwWidgets/wwwidgets4.pro -r -spec linux-lsb-g++-64 CONFIG+=debug CONFIG+=declarative_debug
make -w
sudo make install


Qt 5.1.0
--------
Lots of porting changes... Will make patch file...


===============================================================================
===============================================================================

------------------------
Building qtstyleplugins:
------------------------

Mac 5.2.0-rc1-cocoa-static:
----------------------------

This now works with our modified version of qtstyleplugins so that we don't
link the qstylehelper.cpp file when building as a static library.  That's
needed for a dynamic plugin, but not static.  As static, we get duplicate
symbols between it and qt itself.

-----
cd KingJamesPureBibleSearch
mkdir build-qtstyleplugins-5_2_0_rc1_cocoa_static
cd build-qtstyleplugins-5_2_0_rc1_cocoa_static
~/Qt/5.2.0-rc1-cocoa-static-run/bin/qmake  CONFIG+=staticQt CONFIG+=static CONFIG+=debug_and_release DEFINES+=QT_STATICPLUGIN ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----

For Reference:
~/Qt/5.2.0-rc1-cocoa-static-run/bin/qmake  CONFIG+=staticQt CONFIG+=static CONFIG+=debug_and_release QMAKE_CXXFLAGS+=-DQT_STATICPLUGIN ../qtstyleplugins/qtstyleplugins.pro



Linux 5.2.0-rc1-64-local (dynamicQt):
-------------------------------------

-----
cd KingJamesPureBibleSearch
mkdir build-qtstyleplugins-5_2_0_rc1_64_local
cd build-qtstyleplugins-5_2_0_rc1_64_local
/usr/local/Trolltech/Qt-5.2.0-rc1-64-local/bin/qmake CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
sudo make install
-----


Android 5.2.0-rc1 (armeabi_v7a):
--------------------------------

-----
cd KingJamesPureBibleSearch
mkdir build-qtstyleplugins-5_2_0_rc1_android_armeabi_v7a_gcc_4_8
cd build-qtstyleplugins-5_2_0_rc1_android_armeabi_v7a_gcc_4_8
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r9b
export ANDROID_SDK_ROOT=/home/dewhisna/android/android-sdks
~/Qt/5.2.0-rc1-android/5.2.0-rc1/android_armv7/bin/qmake -spec android-g++ CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Mac 5.2.0-cocoa-static:
-----------------------
-----
cd KingJamesPureBibleSearch
mkdir build-qtstyleplugins-5_2_0_cocoa_static
cd build-qtstyleplugins-5_2_0_cocoa_static
~/Qt/5.2.0-cocoa-static-run/bin/qmake  CONFIG+=staticQt CONFIG+=static CONFIG+=debug_and_release DEFINES+=QT_STATICPLUGIN ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Mac 5.2.0-64-local:
-------------------
-----
cd KingJamesPureBibleSearch
mkdir build-qtstyleplugins-5_2_0_64_local
cd build-qtstyleplugins-5_2_0_64_local
~/Qt/5.2.0-ios-android/5.2.0/clang_64/bin/qmake CONFIG+=static CONFIG+=debug_and_release ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Linux 5.2.0-64-local (dynamicQt):
-------------------------------------
-----
cd KingJamesPureBibleSearch
mkdir build-qtstyleplugins-5_2_0_64_local
cd build-qtstyleplugins-5_2_0_64_local
/usr/local/Trolltech/Qt-5.2.0-64-local/bin/qmake CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
sudo make install
-----

-------------------------------------------------------------------------------

Linux 5.2.1-64-local (dynamicQt):
-------------------------------------
-----
cd KingJamesPureBibleSearch
mkdir build-qtstyleplugins-5_2_1_64_local
cd build-qtstyleplugins-5_2_1_64_local
/usr/local/Trolltech/Qt-5.2.1-64-local/bin/qmake CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
sudo make install
-----


Mac 5.2.1-cocoa-static:
-----------------------
-----
cd KingJamesPureBibleSearch
mkdir build-qtstyleplugins-5_2_1_cocoa_static
cd build-qtstyleplugins-5_2_1_cocoa_static
~/Qt/5.2.1-cocoa-static-run/bin/qmake  CONFIG+=staticQt CONFIG+=static CONFIG+=debug_and_release DEFINES+=QT_STATICPLUGIN ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Mac 5.2.1-64-local:
-------------------
-----
cd KingJamesPureBibleSearch
mkdir build-qtstyleplugins-5_2_1_64_local
cd build-qtstyleplugins-5_2_1_64_local
~/Qt/5.2.1-ios/5.2.1/clang_64/bin/qmake CONFIG+=static CONFIG+=debug_and_release ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----




===============================================================================
===============================================================================

-----------------------
Qt Source Dependencies:
-----------------------

In the Qt Install folder ($$[QT_INSTALL_PREFIX]), the following must be copied
and/or installed from the Qt Source folder in order to provide a common place
for these to be located.  The target names were derived from the Qt 4.8.x source
where we started our application, and have been maintained through Qt 5 for
consistency rather than dealing with the new module subfolder structures:

For Qt 4.8.x
------------
cd $$[QT_INSTALL_PREFIX]
mkdir -p src/3rdparty
cd src/3rdparty/
cp -r <Qt-Source-Folder>/src/3rdparty/zlib* .
cd $$[QT_INSTALL_PREFIX]
mkdir -p src/gui/mac/qt_menu.nib
cd src/gui/mac/qt_menu.nib/
cp <Qt-Source-Folder>/src/gui/mac/qt_menu.nib/* .


For Qt 5.x.x
------------
cd $$[QT_INSTALL_PREFIX]
mkdir -p src/3rdparty
cd src/3rdparty/
cp -r <Qt-Source-Folder>/qtbase/src/3rdparty/zlib* .
cd $$[QT_INSTALL_PREFIX]
mkdir -p src/gui/mac/qt_menu.nib
cd src/gui/mac/qt_menu.nib
cp <Qt-Source-Folder>/qtbase/src/plugins/platforms/cocoa/qt_menu.nib/* .


===============================================================================
===============================================================================

=================================
Emscripten-Qt (4.8.4 equivalent):
=================================

http://vps2.etotheipiplusone.com:30176/redmine/projects/emscripten-qt/wiki
http://vps2.etotheipiplusone.com:30176/redmine/projects/emscripten-qt/wiki/Demos

https://emscripten.org
https://github.com/kripken/emscripten/wiki
https://github.com/kripken/emscripten/wiki/Tutorial
https://github.com/kripken/emscripten


Requires:
---------
llvm and clang 3.2 (sudo apt-get install llvm clang)
nodejs 0.6.19 (sudo apt-get install nodejs)
node 0.10.24 (download from nodejs.org and install to system) (http://nodejs.org/)


Native build also requires SDL:
------------------------------
sudo apt-get install libsdl-net1.2 libsdl-image1.2 libsdl.1.2debian  (possibly others -- I lost count)


Cleaning up old installations:
------------------------------
rm ~/.emscripten
rm -r ~/.emscripten_cache/
rm ~/.emscripten_sanity


Code Checkout:
--------------
mkdir ~/emscripten
cd ~/emscripten
git clone https://github.com/kripken/emscripten.git emscripten              (SEE NOTES BELOW)
use:  git clone -b 1.5.1 https://github.com/kripken/emscripten.git emscripten
git clone git://gitorious.org/qt/emscripten-qt.git


Emscripten Notes and Issues:
----------------------------

See:  https://github.com/kripken/emscripten/issues/2003

Note: Emscripten 1.8.2 (the latest at the time of this writing) has optimization code bugs
that breaks emscripten-qt!! Such as the following code from QPngHandlerPrivate::readPngImage
in src/gui/image/qpnghandler.cpp:

 // sanity check palette entries 
    if (color_type == PNG_COLOR_TYPE_PALETTE 
        && outImage->format() == QImage::Format_Indexed8) { 
        int color_table_size = outImage->colorCount(); 
        for (int y=0; y<(int)height; ++y) { 
            uchar *p = FAST_SCAN_LINE(data, bpl, y); 
            uchar *end = p + width;
            while (p < end) {
                if (*p >= color_table_size)
                    *p = 0;
                ++p;
            }
        }
    }


Emscripten incorrectly generates:

    // sanity check palette entries 
    if (color_type == PNG_COLOR_TYPE_PALETTE 
        && outImage->format() == QImage::Format_Indexed8) { 
        int color_table_size = outImage->colorCount(); 
        for (int y=0; y<(int)height; ++y) { 
            uchar *p = FAST_SCAN_LINE(data, bpl, y); 
            while (p < p + width) {
                if (*p >= color_table_size)
                    *p = 0;
                ++p;
            }
        }
    }


Note:  Emscripten 1.6.4 is also bad
Note:  Emscripten 1.5.7 is also bad
Note:  Emscripten 1.5.6 is also bad
Note:  Emscripten 1.5.5 is also bad
Note:  Emscripten 1.5.4 is also bad
Note:  Emscripten 1.5.3 is also bad -- but almost comes up (displays debug log and derives bad configuration paths)
Note:  Emscripten 1.5.2 is also bad -- but almost comes up
Note:  Emscripten 1.5.1 <<<--- WORKS!!
Note:  Emscripten 1.5.0 Works! (mostly)
Note:  Emscripten 1.4.2 Works! (mostly)
Note:  Emscripten 1.3.8 Works! (mostly)



Configure and Test:
-------------------
cd emscripten

clang tests/hello_world.cpp
./a.out

nodejs tests/hello_world.js

./emcc           (first run builds ~/.emscripten setup file!!)

./emcc tests/hello_world.cpp
node a.out.js

./emcc tests/hello_world_sdl.cpp -o hello.html

./emcc tests/hello_world_file.cpp -o hello.html --preload-file tests/hello_world_file.txt

cd test
../emcc hello_image_sdl.c --preload-file screenshot.jpg -o a.html



Building Emscripten-Qt:
=======================

For all:
export EMSCRIPTEN_ROOT_PATH=/home/dewhisna/emscripten/emscripten


--------------
Generic Build:
--------------

cd ~/emscripten
mkdir build-emscripten-qt
cd build-emscripten-qt

----------------------------------

Without SQL (Debug, no freetype):
---------------------------------
*******************************************************************************
NOTE: This is the production release we are using for final KJPBS Build!!!
*******************************************************************************
../emscripten-qt/configure -xplatform qws/emscripten-clang  -embedded emscripten -static -stl -opensource -debug  -no-qt3support -no-opengl -no-openssl -system-zlib -no-gif -qt-zlib -qt-libpng -no-libmng -no-libtiff -qt-libjpeg -no-accessibility -dbus -script -no-fpu -no-mmx -no-3dnow -no-sse -no-sse2 -no-sse3 -no-ssse3 -no-sse4.1 -no-sse4.2 -no-icu -no-rpath  -confirm-license -no-webkit -no-phonon -no-freetype -nomake demos -nomake examples -little-endian -no-feature-socket  -no-feature-codecs -no-feature-textcodecplugin -no-feature-systemlocale  -no-feature-qws_multiprocess -no-feature-sound    -no-feature-printpreviewwidget  -no-feature-printpreviewdialog  -no-feature-systemsemaphore -no-feature-sharedmemory -no-feature-localeventloop -feature-qws_clientblit -feature-qws_cursor  -depths 32 -make tools  --prefix=$(pwd)/install


make sub-tools-bootstrap && make install_qmake sub-moc-install_subtargets sub-uic-install_subtargets sub-rcc-install_subtargets && make  sub-corelib-install_subtargets sub-gui-install_subtargets sub-xml-install_subtargets install_mkspecs

----------------------------------

Without SQL (Debug, with freetype):
-----------------------------------
../emscripten-qt/configure -xplatform qws/emscripten-clang  -embedded emscripten -static -stl -opensource -debug  -no-qt3support -no-opengl -no-openssl -system-zlib -no-gif -qt-zlib -qt-libpng -no-libmng -no-libtiff -qt-libjpeg -no-accessibility -dbus -script -no-fpu -no-mmx -no-3dnow -no-sse -no-sse2 -no-sse3 -no-ssse3 -no-sse4.1 -no-sse4.2 -no-icu -no-rpath  -confirm-license -no-webkit -no-phonon -qt-freetype -fontconfig -nomake demos -nomake examples -little-endian -no-feature-socket  -no-feature-codecs -no-feature-textcodecplugin -no-feature-systemlocale  -no-feature-qws_multiprocess -no-feature-sound    -no-feature-printpreviewwidget  -no-feature-printpreviewdialog  -no-feature-systemsemaphore -no-feature-sharedmemory -no-feature-localeventloop -feature-qws_clientblit -feature-qws_cursor  -depths 32 -make tools  --prefix=$(pwd)/install


make sub-tools-bootstrap && make install_qmake sub-moc-install_subtargets sub-uic-install_subtargets sub-rcc-install_subtargets && make  sub-corelib-install_subtargets sub-gui-install_subtargets sub-xml-install_subtargets install_mkspecs


----------------------------------

Without SQL (Release, with freetype):
-------------------------------------
../emscripten-qt/configure -xplatform qws/emscripten-clang  -embedded emscripten -static -stl -opensource -release  -no-qt3support -no-opengl -no-openssl -system-zlib -no-gif -qt-zlib -qt-libpng -no-libmng -no-libtiff -qt-libjpeg -no-accessibility -dbus -script -no-fpu -no-mmx -no-3dnow -no-sse -no-sse2 -no-sse3 -no-ssse3 -no-sse4.1 -no-sse4.2 -no-icu -no-rpath  -confirm-license -no-webkit -no-phonon -qt-freetype -fontconfig -nomake demos -nomake examples -little-endian -no-feature-socket  -no-feature-codecs -no-feature-textcodecplugin -no-feature-systemlocale  -no-feature-qws_multiprocess -no-feature-sound    -no-feature-printpreviewwidget  -no-feature-printpreviewdialog  -no-feature-systemsemaphore -no-feature-sharedmemory -no-feature-localeventloop -feature-qws_clientblit -feature-qws_cursor  -depths 32 -make tools  --prefix=$(pwd)/install


make sub-tools-bootstrap && make install_qmake sub-moc-install_subtargets sub-uic-install_subtargets sub-rcc-install_subtargets && make  sub-corelib-install_subtargets sub-gui-install_subtargets sub-xml-install_subtargets install_mkspecs

----------------------------------

With SQL:
---------
../emscripten-qt/configure -xplatform qws/emscripten-clang  -embedded emscripten -static -stl -opensource -debug  -no-qt3support -no-opengl -no-openssl -qt-sql-sqlite  -system-zlib -no-gif -qt-zlib -qt-libpng -no-libmng -no-libtiff -qt-libjpeg -no-accessibility -dbus -script -no-fpu -no-mmx -no-3dnow -no-sse -no-sse2 -no-sse3 -no-ssse3 -no-sse4.1 -no-sse4.2 -no-icu -no-rpath  -confirm-license -no-webkit -no-phonon -no-freetype -nomake demos -nomake examples -little-endian -no-feature-socket  -no-feature-codecs -no-feature-textcodecplugin -no-feature-systemlocale  -no-feature-qws_multiprocess -no-feature-sound    -no-feature-printpreviewwidget  -no-feature-printpreviewdialog  -no-feature-systemsemaphore -no-feature-sharedmemory -no-feature-localeventloop -feature-qws_clientblit -feature-qws_cursor  -depths 32 -make tools  --prefix=$(pwd)/install


make sub-tools-bootstrap && make install_qmake sub-moc-install_subtargets sub-uic-install_subtargets sub-rcc-install_subtargets && make  sub-corelib-install_subtargets sub-gui-install_subtargets sub-sql-install_subtargets sub-xml-install_subtargets install_mkspecs

----------------------------------


(optional optimization):
for i in qcosmeticstroker qdrawhelper qgrayraster; do opt -O3 src/gui/.obj/debug-static-emb-emscripten/$i.o > tmp-llvm-$i.o; mv tmp-llvm-$i.o src/gui/.obj/debug-static-emb-emscripten/$i.o; done && make  sub-corelib-install_subtargets sub-gui-install_subtargets 



-------------
Native Build:
-------------

export EMSCRIPTEN_USE_AR_FOR_STATIC_LIBRARIES=yes
(the above export is also needed on your local app builds!!)

cd ~/emscripten
mkdir build-emscripten-qt-native
cd build-emscripten-qt-native

../emscripten-qt/configure -xplatform qws/emscripten-clang-native  -embedded emscripten -static -opensource -debug  -no-qt3support -no-opengl -no-openssl -qt-sql-sqlite  -system-zlib -no-gif -qt-zlib -qt-libpng -no-libmng -no-libtiff -qt-libjpeg -no-accessibility -dbus -script -no-fpu -no-mmx -no-3dnow -no-sse -no-sse2 -no-sse3 -no-ssse3 -no-sse4.1 -no-sse4.2 -no-icu -no-rpath  -confirm-license -no-webkit -no-phonon -no-freetype -nomake demos -nomake examples -little-endian -no-feature-socket  -no-feature-codecs -no-feature-textcodecplugin -no-feature-systemlocale  -no-feature-qws_multiprocess -no-feature-sound    -no-feature-printpreviewwidget  -no-feature-printpreviewdialog  -no-feature-systemsemaphore -no-feature-sharedmemory -no-feature-localeventloop -feature-qws_clientblit -feature-qws_cursor  -depths 32 -make tools  --prefix=$(pwd)/install


make sub-tools-bootstrap && make install_qmake sub-moc-install_subtargets sub-uic-install_subtargets sub-rcc-install_subtargets && make  sub-corelib-install_subtargets sub-gui-install_subtargets sub-sql-install_subtargets sub-xml-install_subtargets install_mkspecs


Note: The optimization shown for the Generic Build doesn't work for Native Build!



Building Chips Demo (Generic):
==============================

export EMSCRIPTEN_ROOT_PATH=/home/dewhisna/emscripten/emscripten

cd ~/emscripten    (apps won't build under the build-emscripten-qt folder)
mkdir qtdemos
cd qtdemos
cp -R ../emscripten-qt/demos/chip .
cd chip
patch main.cpp < ../../emscripten-qt/emscripten-stuff/chip-emscripten-qt-patch.patch
cd ..
mkdir build-chip
cd build-chip
~/emscripten/build-emscripten-qt/install/bin/qmake ../chip/chip.pro -spec qws/emscripten-clang
make

mkdir -p qt-fonts && cp ../../build-emscripten-qt/install/lib/fonts/helvetica_*.qpf ../../build-emscripten-qt/install/lib/fonts/fixed_*.qpf qt-fonts/
cp ../../build-emscripten-qt/install/lib/QtGui.a QtGui.so
cp ../../build-emscripten-qt/install/lib/QtCore.a QtCore.so

../../emscripten/emcc \
  chip.bc \
  QtGui.so QtCore.so \
  -O2 \
  --closure 0 \
  --jcache \
  --pre-js ../../emscripten-qt/emscripten-stuff/pre-qt.js \
  --js-library ../../emscripten-qt/emscripten-stuff/pre-qt-library.js \
  --embed-file qt-fonts \
  -s EXPORTED_FUNCTIONS="['_main', '_EMSCRIPTENQT_resetTimerCallback', '_EMSCRIPTENQT_timerCallback', '_EMSCRIPTENQT_timerCallback_springboard', '_EMSCRIPTENQT_canvas_width_pixels', '_EMSCRIPTENQT_canvas_height_pixels', '_EMSCRIPTENQT_mouseCanvasPosChanged', '_EMSCRIPTENQT_mouseCanvasButtonChanged']" \
  -s TOTAL_MEMORY=67108864 \
  -s INLINING_LIMIT=50 \
  -o chip.html 

Info from Simon's website:
A brief explanation of the arguments:
    chip.bc is of course the llvm bitcode file that we want to convert to Javascript;
    then we provide the paths to QtCore.a and QtGui.a, which are the bitcode libraries we created when we compiled emscripten-qt;
    -O2 is the optimisation level;
    --closure 0 disables Google's "Closure" compiler as it currently seems to generate incorrect code with emscripten-qt;
    --jcache just tells emcc to cache the results so hopefully things will go faster should we want to compile this again;
    --pre-qt.js contains a bunch of Javascript helpers for interfacing with the canvas (flushing the QWS framebuffer to it; passing canvas mouse events to QWS; setting up the single font file provided with emscripten-qt; etc);
    --embed-file qt-fonts adds the fonts that we just copied over - note that the directory name "qt-fonts" is important here, as emscripten-qt is hardcoded to look for fonts stored in a directory called "qt-fonts";
    -s EXPORTED_FUNCTIONS is something that will hopefully be useful to us when/ if I figure out how to get Closure working with emscripten-qt;
    -s TOTAL_MEMORY sets the amount of "simulated" memory that will be allotted to the app when it runs; the "chip" demo takes up a fair bit of RAM, and Emscripten in asm.js mode requires RAM to be a power of 2, so we allocate ~64MB to be on the safe side; and
    chip.html will be the web page containing the converted Javascript + canvas version of the chips demo that we can run in a browser.


NOTE: Simon's website has a few errors in the commands listed above, such as wrong export
names for the canvas_width_pixels and canvas_height_pixels functions, etc...  Compare!!


Building Chips Demo (Native):
=============================

export EMSCRIPTEN_ROOT_PATH=/home/dewhisna/emscripten/emscripten
export EMSCRIPTEN_USE_AR_FOR_STATIC_LIBRARIES=yes

cd ~/emscripten    (apps won't build under the build-emscripten-qt folder)
mkdir qtdemos
cd qtdemos
cp -R ../emscripten-qt/demos/chip .
cd chip
patch main.cpp < ../../emscripten-qt/emscripten-stuff/chip-emscripten-qt-patch.patch
cd ..
mkdir build-chip-native
cd build-chip-native
~/emscripten/build-emscripten-qt-native/install/bin/qmake ../chip/chip.pro -spec qws/emscripten-clang-native
make



The above 'make' fails I think because of the "EMSCRIPTEN_USE_AR_FOR_STATIC_LIBRARIES" flag.
Doing the following lets it build to a .a file, but the final build step, while it succeeds
(with a couple of tweaks), fails to produce code that actually does anything:
~/emscripten/build-emscripten-qt-native/install/bin/qmake ../chip/chip.pro -spec qws/emscripten-clang-native TEMPLATE=lib QMAKE_CXXFLAGS+=-fPIC QMAKE_CXXFLAGS+=-static CONFIG+=static
make
??????????





mkdir -p qt-fonts && cp ../../build-emscripten-qt-native/install/lib/fonts/helvetica_*.qpf ../../build-emscripten-qt-native/install/lib/fonts/fixed_*.qpf qt-fonts/
cp ../../build-emscripten-qt-native/install/lib/QtGui.a QtGui.so
cp ../../build-emscripten-qt-native/install/lib/QtCore.a QtCore.so

../../emscripten/emcc \
  chip.bc \
  QtGui.so QtCore.so \
  -O2 \
  --closure 0 \
  --jcache \
  --pre-js ../../emscripten-qt/emscripten-stuff/pre-qt.js \
  --js-library ../../emscripten-qt/emscripten-stuff/pre-qt-library.js \
  --embed-file qt-fonts \
  -s EXPORTED_FUNCTIONS="['_main', '_EMSCRIPTENQT_resetTimerCallback', '_EMSCRIPTENQT_timerCallback', '_EMSCRIPTENQT_timerCallback_springboard', '_EMSCRIPTENQT_canvas_width_pixels', '_EMSCRIPTENQT_canvas_height_pixels', '_EMSCRIPTENQT_mouseCanvasPosChanged', '_EMSCRIPTENQT_mouseCanvasButtonChanged']" \
  -s TOTAL_MEMORY=67108864 \
  -s INLINING_LIMIT=50 \
  -o chip.html 


Building KJPBS for Emscripten (Generic):
========================================

export EMSCRIPTEN_ROOT_PATH=/home/dewhisna/emscripten/emscripten

<Build in QtCreator>

cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/build-KJVCanOpener-Qt_4_8_4_emscripten/Debug (or Release)

mkdir -p qt-fonts && cp ~/emscripten/build-emscripten-qt/install/lib/fonts/helvetica_*.qpf ~/emscripten/build-emscripten-qt/install/lib/fonts/fixed_*.qpf qt-fonts/
cp ~/emscripten/build-emscripten-qt/install/lib/QtGui.a QtGui.so
cp ~/emscripten/build-emscripten-qt/install/lib/QtCore.a QtCore.so
cp ~/emscripten/build-emscripten-qt/install/lib/QtSql.a QtSql.so
cp ~/emscripten/build-emscripten-qt/install/lib/QtXml.a QtXml.so

mkdir -p data
cp ~/Documents/programs/Bible/KingJamesPureBibleSearch/KJVCanOpener/db/kjvtext.s3db data/


(Inline):
---------
$EMSCRIPTEN_ROOT_PATH/emcc \
  KingJamesPureBibleSearch.bc \
  QtGui.so QtCore.so QtSql.so QtXml.so \
  -O2 \
  --closure 0 \
  --jcache \
  --pre-js $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt.js \
  --js-library $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt-library.js \
  --embed-file qt-fonts \
  --embed-file data \
  -s EXPORTED_FUNCTIONS="['_main', '_EMSCRIPTENQT_resetTimerCallback', '_EMSCRIPTENQT_timerCallback', '_EMSCRIPTENQT_timerCallback_springboard', '_EMSCRIPTENQT_canvas_width_pixels', '_EMSCRIPTENQT_canvas_height_pixels', '_EMSCRIPTENQT_mouseCanvasPosChanged', '_EMSCRIPTENQT_mouseCanvasButtonChanged']" \
  -s TOTAL_MEMORY=1073741824 \
  -s INLINING_LIMIT=50 \
  -o KingJamesPureBibleSearch.html


(Preload):
----------
$EMSCRIPTEN_ROOT_PATH/emcc \
  KingJamesPureBibleSearch.bc \
  QtGui.so QtCore.so QtSql.so QtXml.so \
  -O2 \
  --closure 0 \
  --jcache \
  --pre-js $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt.js \
  --js-library $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt-library.js \
  --embed-file qt-fonts \
  --preload-file data/kjvtext.s3db \
  -s EXPORTED_FUNCTIONS="['_main', '_EMSCRIPTENQT_resetTimerCallback', '_EMSCRIPTENQT_timerCallback', '_EMSCRIPTENQT_timerCallback_springboard', '_EMSCRIPTENQT_canvas_width_pixels', '_EMSCRIPTENQT_canvas_height_pixels', '_EMSCRIPTENQT_mouseCanvasPosChanged', '_EMSCRIPTENQT_mouseCanvasButtonChanged']" \
  -s TOTAL_MEMORY=1073741824 \
  -s INLINING_LIMIT=50 \
  -o KingJamesPureBibleSearch.html


(No SQL):
---------
*******************************************************************************
NOTE: This is the production release we are using for final KJPBS Build!!!
*******************************************************************************
cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/build-KJVCanOpener-Qt_4_8_4_emscripten/Debug (or Release)

mkdir -p qt-fonts && cp ~/emscripten/build-emscripten-qt/install/lib/fonts/helvetica_*.qpf ~/emscripten/build-emscripten-qt/install/lib/fonts/fixed_*.qpf qt-fonts/

cp ~/emscripten/build-emscripten-qt/install/lib/fonts/DejaVuSans.ttf qt-fonts/
cp ~/emscripten/build-emscripten-qt/install/lib/fonts/DejaVuSerif-BoldOblique.ttf qt-fonts/
cp ~/emscripten/build-emscripten-qt/install/lib/fonts/DejaVuSerif-Bold.ttf qt-fonts/
cp ~/emscripten/build-emscripten-qt/install/lib/fonts/DejaVuSerif-Oblique.ttf qt-fonts/
cp ~/emscripten/build-emscripten-qt/install/lib/fonts/DejaVuSerif.ttf qt-fonts/

cp ~/emscripten/build-emscripten-qt/install/lib/QtGui.a QtGui.so
cp ~/emscripten/build-emscripten-qt/install/lib/QtCore.a QtCore.so
cp ~/emscripten/build-emscripten-qt/install/lib/QtXml.a QtXml.so

mkdir -p data
cp ~/Documents/programs/Bible/KingJamesPureBibleSearch/KJVCanOpener/db/kjvtext.ccdb data/

$EMSCRIPTEN_ROOT_PATH/emcc \
  KingJamesPureBibleSearch.bc \
  QtGui.so QtCore.so QtXml.so \
  -O2 \
  --closure 0 \
  --jcache \
  --pre-js $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt.js \
  --js-library $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt-library.js \
  --embed-file qt-fonts \
  --preload-file data \
  -s EXPORTED_FUNCTIONS="['_main', '_EMSCRIPTENQT_resetTimerCallback', '_EMSCRIPTENQT_timerCallback', '_EMSCRIPTENQT_timerCallback_springboard', '_EMSCRIPTENQT_canvas_width_pixels', '_EMSCRIPTENQT_canvas_height_pixels', '_EMSCRIPTENQT_mouseCanvasPosChanged', '_EMSCRIPTENQT_mouseCanvasButtonChanged', '_EMSCRIPTENQT_attemptedLocalEventLoop']" \
  -s TOTAL_MEMORY=134217728 \
  -s INLINING_LIMIT=50 \
  -s ALIASING_FUNCTION_POINTERS=0 \
  -o KingJamesPureBibleSearch.html


Memory Sizes:
134217728 <<< This is sufficient event for our worst case [a-z]* search
268435456
536870912
1073741824
2147483648 <<< this one doesn't work at all (probably too big)

https://github.com/kripken/emscripten/wiki/CodeGuidelinesAndLimitations#function-pointer-issues

References:
-s VERBOSE=1
-s ALIASING_FUNCTION_POINTERS=0

===============================================================================
===============================================================================

Emscripten Warnings when building SQL with original SQLite3 Module
(These were fixed by changing emscripten-qt/src/3rdparty/sqlite/sqlite.c
to emscripten-qt/src/3rdparty/sqlite/sqlite.cpp and editing all casts, etc
to be C++ format and undating the sqlite.pri file accordingly)
===============================================================

Warning: Casting potentially incompatible function pointer i32 (i8*, i32, i32)* to void ()*, for posixOpen
Warning: See https://github.com/kripken/emscripten/wiki/CodeGuidlinesAndLimitations#function-pointer-issues for more information on dangerous function pointer casts
Warning: Incompatible function pointer casts are very dangerous with ASM_JS=1, you should investigate and correct these
Warning: Casting potentially incompatible function pointer i32 (i32)* to void ()*, for close
Warning: Casting potentially incompatible function pointer i32 (i8*, i32)* to void ()*, for access
Warning: Casting potentially incompatible function pointer i8* (i8*, i32)* to void ()*, for getcwd
Warning: Casting potentially incompatible function pointer i32 (i8*, %struct.stat*)* to void ()*, for stat
Warning: Casting potentially incompatible function pointer i32 (i32, %struct.stat*)* to void ()*, for fstat
Warning: Casting potentially incompatible function pointer i32 (i32, i32)* to void ()*, for ftruncate
Warning: Casting potentially incompatible function pointer i32 (i32, i32, ...)* to void ()*, for fcntl
Warning: Casting potentially incompatible function pointer i32 (i32, i8*, i32)* to void ()*, for read
Warning: Casting potentially incompatible function pointer i32 (i32, i8*, i32)* to void ()*, for write


Warning: Casting potentially incompatible function pointer void (%struct.sqlite3*, i8*)* to void (i8*)*, for sqlite3DbFree
Warning: See https://github.com/kripken/emscripten/wiki/CodeGuidlinesAndLimitations#function-pointer-issues for more information on dangerous function pointer casts
Warning: Incompatible function pointer casts are very dangerous with ASM_JS=1, you should investigate and correct these

===============================================================================
===============================================================================

Emscripten Warnings when building Freetype font support
===============================================================

warning: Casting potentially incompatible function pointer i32 (%struct.FT_SizeRec_.36025*)* to i32 (%struct.FT_SizeRec_.36025*, i32)*, for FNT_Size_Select
warning: See https://github.com/kripken/emscripten/wiki/CodeGuidelinesAndLimitations#function-pointer-issues for more information on dangerous function pointer casts
warning: Incompatible function pointer casts are very dangerous with ASM_JS=1, you should investigate and correct these
warning: Casting potentially incompatible function pointer i32 (%struct.PS_UnicodesRec_*)* to i32 (%struct.FT_CMapRec_.30283*, i8*)*, for t1_cmap_unicode_init
warning: Casting potentially incompatible function pointer i32 (%struct.T1_CMapStdRec_*)* to i32 (%struct.FT_CMapRec_.30283*, i8*)*, for t1_cmap_standard_init
warning: Casting potentially incompatible function pointer i32 (%struct.T1_CMapStdRec_*)* to i32 (%struct.FT_CMapRec_.30283*, i8*)*, for t1_cmap_expert_init
warning: Casting potentially incompatible function pointer i32 (%struct.T1_CMapCustomRec_*)* to i32 (%struct.FT_CMapRec_.30283*, i8*)*, for t1_cmap_custom_init
warning: Casting potentially incompatible function pointer i32 (%struct.PFR_CMapRec_*)* to i32 (%struct.FT_CMapRec_.30038*, i8*)*, for pfr_cmap_init
warning: Casting potentially incompatible function pointer void (%struct.TRaster_.35561*, i32, i8*)* to i32 (%struct.FT_RasterRec_*, i32, i8*)*, for ft_black_set_mode
warning: Casting potentially incompatible function pointer i32 (%struct.FNT_CMapRec_*)* to i32 (%struct.FT_CMapRec_.36055*, i8*)*, for fnt_cmap_init
warning: Casting potentially incompatible function pointer i32 (%struct.CID_FaceRec_*, %struct.CID_Parser_*)* to void (%struct.FT_FaceRec_.35885*, i8*)*, for parse_fd_array
warning: Casting potentially incompatible function pointer i32 (%struct.CID_FaceRec_*, %struct.CID_Parser_*)* to void (%struct.FT_FaceRec_.35885*, i8*)*, for parse_font_matrix19192
warning: Casting potentially incompatible function pointer i32 (%struct.CID_FaceRec_*, %struct.CID_Parser_*)* to void (%struct.FT_FaceRec_.35885*, i8*)*, for parse_expansion_factor
warning: Casting potentially incompatible function pointer i32 (%struct.PS_UnicodesRec_.36202*)* to i32 (%struct.FT_CMapRec_.36189*, i8*)*, for cff_cmap_unicode_init
warning: Casting potentially incompatible function pointer i32 (%struct.CFF_CMapStdRec_*)* to i32 (%struct.FT_CMapRec_.36189*, i8*)*, for cff_cmap_encoding_init
warning: Casting potentially incompatible function pointer i32 (%struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*)* to i32 (%struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_ScriptMetricsRec_*)*, for af_dummy_hints_apply


===============================================================================
===============================================================================


